<template>
    <div id="link" class="centerizeContent boxShadow page">
        <h1>
            Link:
            {{ i.QueryParams["wow"] }}
            <a g-bind:href="fmt.Sprintf(`https://github.com/gascore/%s`, i.Params[`name`])">
                {{ i.Params["name"] }}
            </a>
        </h1>
        <p>
            {{ this.Method("text").(string) }}
        </p>
        <b>
            <e run="i.LinkStatic(`/links`, false)">
                back to all links
            </e>
        </b>
    </div>
</template>

<script>
package components

import (
    r "github.com/gascore/std/router"
    "github.com/gascore/gas"
    "fmt"
    "errors"
    . "github.com/gascore/example/store"
)

func Link(i r.RouteInfo) *gas.Component {
    return S.RC(gas.NC(
        &gas.C{
            Data: map[string]interface{} {
                "links": "some links here",
                "gas": "Gas - frontend golang framework",
                "gas-web": "Web (gopherjs/wasm) backend for gas",
                "gasx": "vue-like templates parser",
                "gas-router": "Web router for gas",
            },
            Methods: map[string]gas.Method {
                "text": func(this *gas.Component, values ...interface{}) (interface{}, error) {
                      name := i.Params["name"]
                      switch name {
                          case "gas", "gas-web", "gasx", "gas-router":
                              return this.Get(name), nil
                          default:
                              return "404. Link is undefined", errors.New("Link is undefined")
                      }
                },
            },
        },
        linkT,), nil)
}

var linkT gas.GetComponentChildes
</script>