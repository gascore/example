package pages

import (
    "github.com/gascore/gas"
    "github.com/gascore/std/router"

    "github.com/gascore/example/app/pages/examples"
)

func (p *Pages) Examples(info *router.RouteInfo) *gas.C {
    f := &gas.F{}

    examples := []struct{
        name string
        element *gas.C
    }{
        {"Hello world",examples.Hello()},
        {"Clicker",examples.Clicker()},
        {"FunctionalComponent",examples.FunctionalExample()},
        {"If and For",examples.IfAndFor()},
        {"Methods",examples.Methods()},
        {"Input and Binds",examples.InputAndBinds()},
        {"HTML directive",examples.HTMLDirective()},
        {"Hooks",examples.Hooks()},
        {"TODO",examples.TODO()},
    }
        
    return f.Init(false, $htmlF{
        <div id="examples" class="mini-block blocksList">
            <section class="contentBlock" g-for='_, example := range examples'>
                <header class="contentBlock-title">
                    {{ example.name }}
                </header>
                <section class="contentBlock-body">
                    <e run="example.element"></e>
                </section>
            </section>
            <div acss="d{flex} mb{.7rem}">
                <e run='p.RCtx.Link("/examples/components")' class="pretty-btn" acss="d{flex} ml{auto}">
                    <span acss="fz{16px} d{block}">
                        Components examples
                    </span>
                    <i class="icon icon-white  icon-forward" acss="m{auto 0 auto .4em} fz{12px}"></i>
                </e>
            </div>
        </div>
    }$)
}
