package components

import (
    "fmt"
    "net/http"
    "bytes"

    "github.com/gascore/gas"
    r "github.com/gascore/std/router"
    
    "gitlab.com/golang-commonmark/markdown"
)

func About(info *r.RouteInfo) *gas.E {
    f := &gas.F{}

    link, setLink := f.UseStateString("gascore/gas/master/README.md")
    file, setFile := f.UseStateString("Loading, please wait...")

    updateFile := func() {
        resp, err := http.Get("https://raw.githubusercontent.com/"+link())
        if err != nil {
            f.C.WarnError(err)
            setFile(`<h1><span style="color: #ff0033">404</span> Page not found</h1>`)
            return
        }

        defer resp.Body.Close()
        buf := new(bytes.Buffer)
        buf.ReadFrom(resp.Body)

        md := markdown.New(markdown.XHTMLOutput(true))
        setFile(md.RenderToString(buf.Bytes()))
    }

    f.UseEffect(func() (func(), error) {
        go updateFile()
        return func() {
            fmt.Println("About page says: \"Bye-bye((\"")
        }, nil
    })
    
    return f.Init(false, $htmlF{
        <div id="about" class="centerizeContent mini-block m(auto)">
            <div class="contentBlock m(0) p(0)">
                <header class="contentBlock-title p(0,!important) m(0) w(100%) d(flex)">
                    <div class="w(8%) d(flex) fz(28px)">
                        <svg xmlns="http://www.w3.org/2000/svg" class="svg-icon m(auto)" viewBox="0 0 24 24">
                            <g data-name="Layer 2">
                                <g data-name="edit-2">
                                    <rect width="24" height="24" opacity="0"/>
                                    <path d="M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2z"/>
                                    <path d="M5 18h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71L16.66 2.6A2 2 0 0 0 14 2.53l-9 9a2 2 0 0 0-.57 1.21L4 16.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 18zM15.27 4L18 6.73l-2 1.95L13.32 6z"/>
                                </g>
                            </g>
                        </svg>
                    </div>
                    <input @input="setLink(e.Value())" :value="link()" class="w(92%) bd(none) p(.8rem) bdrs(.4rem,.4rem,0,0)" type="text">
                </header>
                <div class="contentBlock-body ovx(auto)">
                    <div g-html="file()"></div>
                </div>
            </div>
        </div>
    }$)
}
