package components

import (
    "fmt"
    r "github.com/gascore/std/router"
    "github.com/gascore/gas"
)

type LinkPage struct {
    c *gas.C
    i r.RouteInfo

    name string
    text string
}

func Link(i r.RouteInfo) *gas.E {
    f := &gas.F{}

    name := i.Params["name"]

    var text string 
    switch name {
    case "gas":
        text = "Gas - frontend golang framework"
    case "example":
        text = "Gas framework example application"
    case "gasx":
        text = "CLI for gas apps"
    case "std":
        text = "Gas framework standard library"
    }

    return f.Init(false, $htmlF{
        <div id="link" class="nano-block">
            <div class="boxShadow page fz(22px) p(.8rem,1.2rem) d(flex) bg(#fff)">
                <div class="m(auto)">
                    {{ text }}
                </div>
                <span class="m(0 .4rem)">
                    <a g-bind:href="fmt.Sprintf(`https://github.com/gascore/%s`, name)" class="pretty-btn" target="_blank">
                        {{ name }}
                    </a>
                </span>
            </div>
            <div class="c(dark-gray) fz(14px) m(.3rem,0,0,.4rem)">
                <e run="i.Link(`/links`, false)" class="d(flex)">
                    <i class="icon icon-back m(auto,.4em,auto,0) fz(12px)"></i>
                    <span class="fz(16px) d(block)">
                        Back to all links
                    </span>
                </e>
            </div>
        </div>
    }$)
}
