package components

import (
    r "github.com/gascore/std/router"
    "github.com/gascore/gas"
    "github.com/gascore/example/app/components/examples"
)

type ExamplesPage struct {
    c *gas.C
    i r.RouteInfo
}

func Examples(info *r.RouteInfo) *gas.E {
    f := &gas.F{}
    
    examples := []struct{
        name string
        element *gas.E
    }{
        {"Hello world",examples.Hello()},
        {"Clicker",examples.Clicker()},
        {"FunctionalComponent",examples.FunctionalExample()},
        {"If and For",examples.IfAndFor()},
        {"Methods",examples.Methods()},
        {"Watchers and Binds",examples.WatchersAndBinds()},
        {"HTML directive",examples.HTMLDirective()},
        {"Hooks",examples.Hooks()},
        {"TODO",examples.TODO()},
    }
        
    return f.Init(false, $htmlF{
        <div id="examples" class="mini-block blocksList">
            <section class="contentBlock" g-for="_, example := range examples">
                <header class="contentBlock-title">
                    {{ example.name }}
                </header>
                <section class="contentBlock-body">
                    <e run="example.element"></e>
                </section>
            </section>
            <div class="d(flex)">
                <e run="ctx.Link(`/examples/components`)" class="d(flex) ml(auto) pretty-btn">
                    <span class="fz(16px) d(block)">
                        Components examples
                    </span>
                    <i class="icon icon-forward m(auto,0,auto,.4em) fz(12px)"></i>
                </e>
            </div>
        </div>
    }$)
}
